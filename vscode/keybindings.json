[
  {
    "key": "alt+;",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd && !editorReadonly"
  },
  {
    "key": "alt+tab",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+home",
    "command": "workbench.panel.repl.view.focus",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+home",
    "command": "workbench.panel.output.focus",
    "when": "inDebugRepl"
  },
  {
    "key": "ctrl+home",
    "command": "workbench.action.problems.focus",
    "when": "inOutput"
  },
  {
    "key": "ctrl+end",
    "command": "workbench.panel.output.focus",
    "when": "problemFocus || problemsView || problemsFilterFocus"
  },
  {
    "key": "ctrl+end",
    "command": "workbench.panel.repl.view.focus",
    "when": "inOutput"
  },
  {
    "key": "ctrl+end",
    "command": "terminal.focus",
    "when": "inDebugRepl"
  },
  {
    "key": "cmd+;",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+/",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.focusFirstEditorGroup",
        "workbench.action.togglePanel"
      ]
    },
    "when": "panelFocus"
  },
  {
    "key": "cmd+/",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.focusPanel",
      ]
    },
    "when": "!panelFocus && panelMaximized"
  },
  {
    "key": "cmd+/",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.focusPanel",
        "workbench.action.toggleMaximizedPanel"
      ]
    },
    "when": "!panelFocus && !panelMaximized"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus"
  },
  {
    "key": "cmd+enter",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.closeSidebar",
        "workbench.action.closePanel",
        "workbench.action.closeEditorsInOtherGroups"
      ]
    },
    "when": "!panelFocus"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "cmd+m",
    "command": "magit.status"
  },
  {
    "key": "cmd+o",
    "command": "newFile.createNewFile"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "cmd+s",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "hideSuggestWidget",
        "removeSecondaryCursors",
        "workbench.action.files.save"
      ]
    },
    "when": "editorFocus"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "panelFocus && !panelMaximized"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "panelFocus && !panelMaximized"
  },
  {
    "key": "cmd+up",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.focusFirstEditorGroup",
        "workbench.action.closePanel"
      ]
    },
    "when": "panelFocus && panelMaximized"
  },
  {
    "key": "cmd+q",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "cmd+q",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+c l",
    "command": "settings.cycle.lineNumbers",
    "when": "editorFocus"
  },
  {
    "key": "alt+k",
    "command": "emacs-mcx.paredit.killSexp",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+x e",
    "command": "workbench.action.tasks.runTask",
    "args": "emacs"
  },
  {
    "key": "ctrl+x ctrl+f",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+x g",
    "command": "workbench.action.tasks.runTask",
    "args": "emacs-magit-status"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+x ctrl+d",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.debug.start",
        "workbench.action.closeSidebar"
      ]
    }
  },
  {
    "key": "ctrl+x shift+ctrl+D",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // Search result navigation (default bindings: f4 and shift+f4)
  {
    "key": "ctrl+down",
    "command": "references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "ctrl+down",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+down",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+up",
    "command": "references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "ctrl+up",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+up",
    "command": "goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "alt+.",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+x z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!terminalFocus"
  }
]
