[core]
	pager = delta
    attributesfile = ~/src/config/git/gitattributes
    excludesfile = ~/.gitignore
    editor = emacsclient

[delta]
	light = true
    # max-line-length = 20
	hyperlinks = true
    # hyperlinks-file-link-format = "http://localhost:5000/open/{path}?line-number={line_number}"
    # hyperlinks-file-link-format = "emacs://{path}:{line}"
    # hyperlinks-file-link-format = "file-line-column://{path}:{line}"
	# hunk-header-style = omit
	# line-numbers = false
	# line-numbers = false
	# side-by-side = true
    # line-numbers = true
    # line-numbers-left-format = "{nm:>3}⋮"
    # line-numbers-right-format = "{np:>3}│ "
    # features = line-numbers
    # keep-plus-minus-markers = true
	# hyperlinks = true


[delta "magit-delta"]


[delta "diff-filter"]
    # Can leave empty, but optionally put diffFilter-only settings here

# [interactive]
#     diffFilter = bash -c 'delta --color-only | tee /tmp/delta-output.txt' #delta --color-only --features=diff-filter

[diff]
	colorMoved = dimmed-zebra
	submodule = log
	frag = red
	# colorMovedWS = allow-indentation-change


[user]
    name = Dan Davison
    email = dandavison7@gmail.com
    # useConfigOnly = true

[include]
    # path = /Users/dan/src/config/delta/delta.conf

# [color "diff"]
#     # Delta must still work correctly for whatever nonsense you put here!
#     old = 3 # bold "#aabbcc" brightblack blink
#     new = 4 # strike ul 22 "#ddeeff" dim

    # oldMoved = bold brightmagenta "#ffe0e0"
    # oldMovedAlternative = bold brightmagenta "#ffe0e0"
    # newMoved = bold brightblue "#d0ffd0"
    # newMovedAlternative = bold brightblue "#d0ffd0"



#     oldMovedDimmed = normal
#     oldMovedAlternative = normal
#     oldMovedAlternativeDimmed = normal
#     newMovedDimmed = normal
#     newMovedAlternative = normal
#     newMovedAlternativeDimmed = normal
     meta = bold yellow
     frag = bold magenta
#     commit = bold red
#     context = normal
#     func = normal
#     whitespace = normal
#     contextDimmed = normal
#     oldDimmed = normal
#     newDimmed = normal
#     contextBold = normal
#     oldBold = normal
#     newBold = normal

[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22

[diff-so-fancy]
    markEmptyLines = true
	changeHunkIndicators = true

[diff "json"]
    textconv = /Users/dan/bin/jsonpipe

[diff "plist"]
    textconv = plutil -convert xml1 -o -

[diff "docx"]
    textconv = docx2txt

[diff "pdf"]
    textconv = /Users/dan/src/1p/misc/pdftotext.sh


# [commit]
#     cleanup = whitespace
#     template = /dev/null

[merge]
    renamelimit = 10000
    conflictstyle = diff3

[rebase]
    autosquash = true

[push]
    default = current
	followTags = true

[pull]
	ff = only

[credential]
    helper = osxkeychain

# [stash]
#     showStat = true
#     showPatch = true

[advice]
    detachedHead = False

[alias]
    set-email-public = config user.email "dandavison7@gmail.com"
    set-email-counsyl = config user.email "dan@counsyl.com"
    url = config remote.origin.url
    blamestats = !~/git-utils/blamestats.py ${GIT_PREFIX:-.}
    branch-by-date = !~/src/git-utils/git-branch-by-date
    contributors = !git log --format=format:"%an" | sort | uniq -c | sort -rn
    fetch-branch = "!f() { git fetch origin $1:$1 } ; f"
    grep-history = "!f() { git rev-list --all | xargs git grep $1 } ; f"
    head = rev-list -n1 HEAD
    copy-branch = !"f() { git checkout -b $1 && git checkout - } ; f"
    copy-head = !git head | tr -d '\n' | reattach-to-user-namespace pbcopy
    log1 = log \
         --date relative \
         --format='%n\
%C(green) ------------------------------------------------------------------------------%n\
%C(green)%h %C(green)%ad %ae%n\
%n\
    %s%n\
%n\
    %-b%n\
'
    log5 = log --format='%C(red)%ad%C(reset) %ae %h%n%n    %s%n%n'
    log2 = log --graph --color --decorate --date=relative --abbrev-commit
    log3 = log --pretty=oneline --abbrev-commit
    log4 = log --stat
    ls = ls-files
    merge = merge --no-edit
    playback = !~/lib/python/git-playback/playback.py ${GIT_PREFIX:-.}
    pull = pull --verbose
    rebase = !~/bin/git-rebase
    squash = !git reset --soft HEAD~1 && git commit --amend -C HEAD
    delete-merged-master = "!f() { git branch --merged master | grep -v '^[\\* ] master$' | xargs -n 1 git branch -d; }; f"
    delete-merged-current = "!f() { git branch --merged | grep -v \\* | grep -v master$ | xargs -n 1 git branch -d; }; f"
    state = !"echo $(git rev-parse --abbrev-ref HEAD; git rev-parse HEAD; _diff=$(git diff; git diff --cached); [ -n \"$_diff\" ] && md5sum - <<< \"$_diff\")"
    lp = "!git log --graph --color=always --format=\"%C(auto)%h%d %s %C(black)%C(bold)<%an> %cr%C(auto)\" \"$@\" \
          | fzf --ansi -m --no-sort --reverse --tiebreak=index \
          --preview \"(grep -o '[a-f0-9]\\{7\\}' | head -1 | xargs -I % sh -c 'git -c core.pager=cat show --color=never % | delta') <<< {}\" #"
[color "diff"]
	frag = red
