[core]
    excludesfile = ~/.gitignore
    editor = emacsclient  # editor = emacs -nw -q
    pager = diff-so-fancy | less --tabs=1,5 -R

[color]
    ui = auto

[user]
    name = Dan Davison
    email = (none)

[diff "json"]
    textconv = /Users/dan/bin/jsonpipe

[diff "plist"]
    textconv = plutil -convert xml1 -o -

[diff "docx"]
    textconv = docx2txt

[diff "pdf"]
    textconv = /Users/dan/src/1p/misc/pdftotext.sh

[merge]
    renamelimit = 10000

[rebase]
    autosquash = true

[push]
    default = current

[color]
    ui = auto
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = true
    pager = true

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse

[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[hub]
    host = github.counsyl.com

[credential]
    helper = osxkeychain

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[alias]
    set-email-public = config user.email "dandavison7@gmail.com"
    set-email-counsyl = config user.email "dan@counsyl.com"
    url = config remote.origin.url
    blamestats = !~/git-utils/blamestats.py ${GIT_PREFIX:-.}
    branch-by-date = !~/src/counsyl/git-utils/git-branch-by-date
    contributors = !git log --format=format:"%an" | sort | uniq -c | sort -rn
    fetch-branch = "!f() { git fetch origin $1:$1 } ; f"
    fixup = commit --amend -C HEAD
    grep-history = "!f() { git rev-list --all | xargs git grep $1 } ; f"
    head = rev-list -n1 HEAD
    copy-branch = !"f() { git checkout -b $1 && git checkout - } ; f"
    copy-head = !git head | tr -d '\n' | reattach-to-user-namespace pbcopy

    log1 = log \
         --date relative \
         --format='%n\
%C(magenta) ------------------------------------------------------------------------------%n\
%C(magenta)%h %C(magenta)%ad %ae%n\
%n\
    %s%n\
%n\
    %-b%n\
'

    log5 = log --format='%C(red)%ad%C(reset) %ae %h%n%n    %s%n%n'
    log2 = log --graph --color --decorate --date=relative --abbrev-commit
    log3 = log --pretty=oneline --abbrev-commit
    log4 = log --stat
    ls = ls-files
    merge = merge --no-edit
    playback = !~/lib/python/git-playback/playback.py ${GIT_PREFIX:-.}
    push1 = push --set-upstream
    push2 = push -u
    regraft = !~/clib/git-utils/git-regraft
    squash = !git reset --soft HEAD~1 && git commit --amend -C HEAD
    pushf = !git push origin :$(git rev-parse --abbrev-ref HEAD) && git push
